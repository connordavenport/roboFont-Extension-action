name: "RoboFont Extension builder"
description: "Validate and build RoboFont extensions from repository and save it as a release."
branding:
  icon: "box"
  color: "purple"

inputs:
  autotagging:
    required: false
    description: 'Create a tag when the version changes in the info.yaml.'
    default: false

runs:
  using: composite
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Read yaml
      if: inputs.autotagging
      uses: actions-tools/yaml-outputs@v2
      id: info-action
      with:
          file-path: info.yaml

    - name: Read version from yaml
      if: inputs.autotagging
      shell: bash
      run : |
        echo version: ${{ steps.info-action.outputs.version }}

    - name: Create tag if not present
      if: inputs.autotagging
      shell: bash
      run: |
        if [ $(git tag -l "${{ steps.info-action.outputs.version }}") ]; then
          echo "Tag ${{ steps.info-action.outputs.version }} exists"
        else
          echo "Create tag ${{ steps.info-action.outputs.version }}"
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a ${{ steps.info-action.outputs.version }} -m "Version ${{ steps.info-action.outputs.version }}"
          git push origin "${{ steps.info-action.outputs.version }}"
          echo "BUILD_RELEASE=true" >> $GITHUB_ENV
        fi
        
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9.13'

    - name: Display Python version
      shell: bash
      run: python -c "import sys; print(sys.version)"
      
    - name: Install ExtensionBundle
      shell: bash
      run: pip install --user git+https://github.com/typemytype/extensionBundle

    - name: Build and validate
      shell: bash
      run: pack_extension --zip

    - name: Upload artifact
      if: startsWith(github.event.ref, 'refs/tags') || env.BUILD_RELEASE
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.EXTENSION_ZIP_PATH }}
        path: ./${{ env.EXTENSION_ZIP_PATH }}

    - name: Release extension based on custom tag
      if: startsWith(github.event.ref, 'refs/tags') && !env.BUILD_RELEASE
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.EXTENSION_ZIP_PATH }}
        generate_release_notes: true

    - name: Release extension based on autotagging
      if: env.BUILD_RELEASE && !startsWith(github.event.ref, 'refs/tags')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.info-action.outputs.version }}
        files: ${{ env.EXTENSION_ZIP_PATH }}
        generate_release_notes: true



